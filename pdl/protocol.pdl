version
  major 0
  minor 1

# The Recording domain defines methods for managing recordings.
domain Recording

  # Globally unique identifier for a recording.
  type RecordingID extends string

  # Unique identifier for the software used to produce a recording.
  type BuildID extends string

  # A time which can be used in reference to a recording. This is the elapsed
  # time in seconds since the recording started.
  type TimeStamp extends number

  # Get any available description for a recording, or an error if there is no
  # description set.
  command getRecordingDescription
    parameters
      # Recording to get the description for.
      RecordingID recordingId
    returns
      # Duration of the recording.
      TimeStamp duration
      # Painted graphics at the end of the recording.
      optional Graphics.ScreenShot lastScreen

  # Create a session for inspecting a recording.
  command createSession
    parameters
      # Recording to load into the session.
      RecordingID recordingId
    returns
      # Identifier for the new session.
      Session.SessionID sessionId

  # Release a session and allow its resources to be reclaimed.
  command releaseSession
    parameters
      # Session to release.
      Session.SessionID sessionId

# The Session domain defines methods for using recording sessions. In order to
# inspect a recording, it must first be loaded into a session via
# <code>Recording.createSession</code>.
domain Session

  # Unique identifier for a session which a recording has been loaded into.
  type SessionID extends string

# The Graphics domain defines methods for accessing a recording's graphics data.
domain Graphics

  # Graphics encoding format.
  type MimeType extends String
    enum
      image/jpeg
      image/png

  # Screen shot of the graphics rendered at some point.
  type ScreenShot extends object
    properties
      # Encoding used for the graphics data.
      MimeType mimeType
      # Raw graphics data encoded in base64.
      string data

# The Internal domain is for use by Web Replay's own tools and other software.
# While use of this domain is not restricted, it won't be very helpful for other
# users.
domain Internal

  # Add text to the server side log for this connection.
  command log
    parameters
      # Text to log. This must not contain identifying information about the
      # user or website being visited.
      string text
      # Timestamp from Date.now() to associate with this logged text.
      integer time

  # Create a new recording.
  command createRecording
    parameters
      # Build ID of the software which produced the recording.
      Recording.BuildID buildId
    returns
      # Identifier for the recording.
      Recording.RecordingID recordingId

  # Add data to a recording. The next message sent after this must be a binary
  # message with the data described by this message. Uploaded recordings are not
  # explicitly finished; replay sessions created for a recording will include
  # all data which was successfully uploaded.
  command addRecordingData
    parameters
      # ID of the recording data is being added to. This recording must have
      # been produced by a createRecording command previously sent on this
      # connection.
      Recording.RecordingID recordingId
      # Byte offset into the recording's blob of the data being sent.
      integer offset
      # Byte length of the data being sent.
      integer length

  # Add metadata about a recording. This information is advisory and does not
  # need to be correct, but can be fetched and used when loading recordings for
  # replay (especially recordings that haven't finished uploading).
  command addRecordingDescription
    parameters
      # ID of the recording being described.
      Recording.RecordingID recordingId
      # Total byte length of the recording.
      integer length
      # Duration of the entire recording.
      Recording.TimeStamp duration
      # Painted graphics at the end of the recording.
      optional Graphics.ScreenShot lastScreen
